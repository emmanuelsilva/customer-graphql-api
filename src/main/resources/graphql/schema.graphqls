type Query {
    customers: [Customer]
    findCustomerByName(name: String): Customer
    findCustomersByState(state: State): [Customer]
}

input CreateCustomerRequest {
    name: String!
}

input ChangeStateRequest {
    customerId: ID!,
    newState: State!
}

type Mutation {
    addCustomer(request: CreateCustomerRequest): Customer
    changeState(request: ChangeStateRequest): Customer
}

type Subscription {
    customerChangeEvents(customerId: ID): Customer
}

type Customer {
    id: ID!
    name: String!
    state: State!
}

enum State {
    CREATED
    ACTIVATED
    DEACTIVATED
}

type CustomerStateChangedEvent {
    customerId: ID!
    newState: State
}

